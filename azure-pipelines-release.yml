trigger: none
name: $(Date:yyyyMMdd).$(Rev:r)
parameters:
- name: DryRun
  type: boolean
  default: false
variables:
- name: NuGetApiKey
  value: 
- name: NuGetFeed
  value: https://api.nuget.org/v3/index.json
resources:
  pipelines:
  - pipeline: '_dotnet-crank-ci-official'
    project: 'internal'
    source: 'dotnet\crank\dotnet-crank-ci-official'
  repositories:
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: NetCore1ESPool-Internal
      image: 1es-windows-2022

    stages:
    - stage: Publish
      jobs:
      - job: Publish_Job
        displayName: Publish Crank NuGet Packages
        condition: succeeded()
        timeoutInMinutes: 0
        templateContext:
          inputs:
          - input: pipelineArtifact
            pipeline: '_dotnet-crank-ci-official'
            artifactName: 'PackageArtifacts'
            targetPath: '$(Pipeline.Workspace)/PackageArtifacts'
        steps:
        - task: NuGetToolInstaller@1
          displayName: Install NuGet
        - task: PowerShell@2
          displayName: Publish NuGet Packages
          inputs:
            targetType: inline
            script: |-
              if(!$env:NuGetFeed) {
                throw "Missing 'NuGetFeed' variable!"
              }
              Write-Host "Dry run: $env:DryRun"
              if($env:DryRun) {
                Write-Host "Dry run enabled. The following packages would have been published:"
                Get-ChildItem "$(Pipeline.Workspace)\PackageArtifacts\" -Filter *.nupkg | ForEach-Object {
                  $name = $_.Name
                  Write-Host "Would publish $name"
                }
              } else {
                if(!$env:NuGetApiKey) {
                  throw "Missing 'NuGetApiKey' variable!"
                }
                Get-ChildItem "$(Pipeline.Workspace)\PackageArtifacts\" -Filter *.nupkg | ForEach-Object {
                  $name = $_.Name
                  Write-Host "Publishing $name"
                  nuget push -Source $env:NuGetFeed -ApiKey $env:NuGetApiKey $_.FullName
                }
              }
          env:
            NuGetApiKey: $(NuGetApiKey)
            DryRun: ${{ parameters.DryRun }}